!= partial("_shared/nav/nav", { "classes": "jumbotron-knockout" })
.st-content#st-content
  != partial("_shared/nav/navbar", { "classes": "jumbotron-knockout" })
  != partial("_shared/opening")
  .container.st-content-inner
    .section-features
      .row
        .col-12.col-lg-10.col-offset-1
          h2.h1.feature-header Here’s how Harp helps
      .feature
        .row
          .col-12.col-lg-5
            img(src="/images/features/feature-preprocessors.png").image-feature
          .col-12.col-lg-5.col-offset-1
            h3 Automatic preprocessing
            p Harp automatically preprocesses code and serves it to the browser as HTML, CSS, and JavaScript. Now you can focus on writing instead of wrangling.
            a(href="/docs/quick-start") Get started
        .row
          .col-12.col-lg-6
            h3.h2.text-center Write <code>main.scss</code>
            pre
              code(class="language-scss")
                | $text-color: #F938AB;
                | &nbsp;
                | body {
                |   color: $text-color;
                | }
          .col-12.col-lg-6
            h3.h2.text-center …Harp serves <code>main.css</code> automatically
            pre
              code(class="language-css")
                | body {
                |  color: #F938AB; }
            pre
              code(class="language-markup")
                | &lt;link href="main.css" rel="stylesheet"&gt;
      .feature
        .col-12.col-lg-4.col-offset-1
          h3 Preprocessors are built-in
          p Harp already includes the preprocessors you love: <a href="/docs/development/markdown">Markdown</a>, <a href="/docs/development/jade">Jade</a>, <a href="/docs/development/ejs">EJS</a>, <a href="/docs/development/less">LESS</a>, <a href="/docs/development/stylus">Stylus</a>, <a href="/docs/development/sass">Sass</a> and <a href="/docs/development/coffeescript">CoffeeScript</a>, are all available without any configuration or setup necessary.
        .col-12.col-lg-6
          .row
            a.col-lg-6(href="/docs/development/less"): img(alt="Write CSS with LESS" src="/images/icons/less-logo.svg")
            a.col-lg-6(href="/docs/development/sass"): img(alt="Write CSS with Sass" src="/images/icons/sass-logo.svg")
            a.col-lg-6(href="/docs/development/stylus"): img(alt="Write CSS with Stylus" src="/images/icons/stylus-logo.svg")
            a.col-lg-6(href="/docs/development/coffeescript"): img(alt="Write JavaScript with CoffeeScript" src="/images/icons/coffeescript-logo.svg")
            a.col-lg-6(href="/docs/development/markdown"): img(alt="Markdown" src="/images/icons/markdown-logo.svg")
            a.col-lg-6(href="/docs/development/jade"): img(alt="Jade" src="/images/icons/jade-logo.svg")
      .feature
        .row
          .col-12.col-lg-5.col-offset-1
            img(src="/images/features/feature-layout-partial.png").image-feature
          .col-12.col-lg-5
            h3 The beloved Layout/Partial paradigm
            p Keep your code clean and organized: reuse common elements with <a href="/docs/development/partial">partials</a>, and maintain a consistent site design with <a href="/docs/development/layout">layouts</a>. Harp makes both paradigms available to Jade and <abbr>EJS</abbr>.
        .row
          .col-12.col-lg-6
            h3.h2.text-center Write <code>_nav.ejs…</code>
            pre
              code(class="language-markup")
                | &lt;!-- _nav.ejs --&gt;
                | &lt;nav&gt;
                |   &lt;a href="#">Home&lt;/a&gt;
                |   &lt;a href="#"&gt;Product&lt;/a&gt;
                |   &lt;a href="#"&gt;Services&lt;/a&gt;
                | &lt;/nav&gt;
          .col-12.col-lg-6
            h3.h2.text-center …include it anywhere, like <code>main.ejs</code>
            pre
              code(class="language-markup")
                | &lt;body&gt;
                |   &lt;!-- Include _nav.ejs --&gt;
                |   &lt;%- partial("_nav") %&gt;
                |   &lt;h1&gt;Services&lt;/h1&gt
                |   &lt;!-- etc. --&gt;
                | &lt;/body&gt;
      .feature
        .col-12.col-lg-5.col-offset-1
          h3 All inside a fast, lightweight web server
          p Harp intelligently compiles assets as the browser needs them, so it’s insanely fast. All you have to do is Save and Refresh.
          a(href="/docs/quick-start") Get started
        .col-12.col-lg-5
          img(src="/images/features/feature-server.png").image-feature
      .feature
        .row
          .col-12.col-lg-5
            img(src="/images/features/feature-datajson.png").image-feature
          .col-12.col-lg-5.col-offset-1
            h3 Flexible, custom metadata
            p Move from static assets to truly dynamic content by passing metadata into your views and pages. Using your favorite templating engine, variables and loops make writing Harp applications fun and powerful.
            a(href="/docs/quick-start") Get started
        .row
          .col-12.col-lg-6
            h3.h2.text-center Store metadata in <code>_data.json</code>
            pre
              code(class="language-json" data-filename="_data.json")
                | "team": {
                |   "title": "Team page",
                |   "members": ["Rob", "Brock", "Jorge"]
                | }
          .col-12.col-lg-6
            h3.h2.text-center Use it with Jade or EJS
            pre
              code(class="language-markup" data-filename="team.jade")
                | h1= title
                | ul
                |   each member in members
                |     li= member
      .feature
        .col-12.col-lg-5.col-offset-1
          h3 Compile and deploy
          p Whether you’re making a GitHub project page, or a mobile application using Apache Cordova/PhoneGap, you can easily compile your code to <abbr>HTML</abbr>, <abbr>CSS</abbr> &amp; JavaScript and host it anywhere.
          p Or, skip compiling all together, and publish from Dropbox with the <a href="http://harp.io/">Harp Platform</a>.
        .col-12.col-lg-6
          //- Harp Platform, Heroku, Nodejitsu, GitHub Pages, Cordova, Firefox OS
          a.col-lg-12(href="http://harp.io"): img(title="Harp" src="/images/icons/harp-platform-logo.svg")
          a.col-lg-6(href="/docs/deployment/github-pages"): img(title="GitHub" src="/images/icons/github-logo.svg")
          a.col-lg-6(href="/docs/deployment/heroku"): img(title="Heroku" src="/images/icons/heroku-logo.svg")
          //- a.col-lg-6(href="/docs/deployment/nodejitsu")
          img.col-lg-6(title="Nodejitsu" src="/images/icons/nodejitsu-logo.svg")
          //- a.col-lg-6(href="/docs/deployment/cordova")
          img.col-lg-6(title="Cordova" src="/images/icons/cordova-logo.svg")
          //- a.col-lg-6(href="/docs/deployment/firefox-os"): img(title="FireFox OS" src="/images/icons/firefox-os-logo.svg")

      .feature
        .col-12.col-lg-6.col-offset-3
          h3 Get started
          p Harp doesn’t require any configuration to get started. Install Harp in your terminal using the command: <code>npm install -g harp</code> or follow the <a href="/docs/quick-start">Quick Start guide</a>.
          != partial("_shared/install")
          a.btn.btn-success.btn-large(href="/docs/quick-start") Install Harp
          hr
          != partial("_shared/social-list")

    //- .section-nextsteps
    //-   .row
    //-     .col-12.col-lg-10.col-offset-1
    //-       h2.h1.feature-header Find out more
    //-       != partial("_shared/social-list-group")
